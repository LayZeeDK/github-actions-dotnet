name: "CI workflow"

env:
  DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  DOTNET_MULTILEVEL_LOOKUP: 0
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  dotnet-sdk-version: 5.0.x

on:
  pull_request:
    branches:

    paths-ignore:
      - "**/*.md"
      - "**/*.gitignore"
      - "**/*.gitattributes"
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
      - "**/*.gitignore"
      - "**/*.gitattributes"
  workflow_dispatch:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
      - "**/*.gitignore"
      - "**/*.gitattributes"

jobs:
  build:
    name: Build
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
        working-directory: ./Lars.WeatherApi

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.dotnet-sdk-version }}

      - name: Build
        run: dotnet build --configuration "Release"

  test:
    name: Test
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.dotnet-sdk-version }}

      - name: Test
        run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

  sonar:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.dotnet-sdk-version }}
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"LayZeeDK_github-actions-dotnet" /o:"layzee" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      # - name: SonarCloud Scan
      #   uses: sonarsource/sonarcloud-github-action@v1.6
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
